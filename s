[1mdiff --git a/src/test/Simulation.t.sol b/src/test/Simulation.t.sol[m
[1mindex d937842..4eea3d5 100644[m
[1m--- a/src/test/Simulation.t.sol[m
[1m+++ b/src/test/Simulation.t.sol[m
[36m@@ -89,6 +89,7 @@[m [mcontract SimulationTests is DSTest {[m
     bytes32 constant ulpDaiEthName = "UNIV2DAIETH-A";[m
     bytes32 constant ulpWbtcEthName = "UNIV2WBTCETH-A";[m
 [m
[32m+[m[32m    uint256 constant BTC = 1E8;[m
     uint256 constant WAD = 1E18;[m
     uint256 constant RAY = 1E27;[m
     uint256 constant RAD = 1E45;[m
[36m@@ -366,7 +367,7 @@[m [mcontract SimulationTests is DSTest {[m
     }[m
 [m
     function testGetWbtc() public {[m
[31m-        uint256 amountWbtc = 1 * 1E8;[m
[32m+[m[32m        uint256 amountWbtc = 1 * BTC;[m
         uint256 wbtcPre = wbtc.balanceOf(address(this));[m
         getWbtc(amountWbtc);[m
         uint256 wbtcPost = wbtc.balanceOf(address(this));[m
[36m@@ -420,7 +421,7 @@[m [mcontract SimulationTests is DSTest {[m
 [m
     function testGetSlpWbtcEth() public {[m
         assertEq(slpWbtcEth.balanceOf(address(this)), 0);[m
[31m-        uint256 expected = 1 * 1E8;[m
[32m+[m[32m        uint256 expected = 1 * BTC;[m
         getSlpWbtcEth(expected);[m
         uint256 actual = slpWbtcEth.balanceOf(address(this));[m
         assertGt(actual, expected);[m
[36m@@ -452,6 +453,31 @@[m [mcontract SimulationTests is DSTest {[m
         assertGt(dai.balanceOf(address(this)), 1 * WAD);[m
     }[m
 [m
[32m+[m[32m    function burnSlpWbtcEth(uint256 amount) private {[m
[32m+[m[32m        sushiRouter.removeLiquidity({[m
[32m+[m[32m            tokenA: wbtcAddr,[m
[32m+[m[32m            tokenB: wethAddr,[m
[32m+[m[32m            liquidity: amount,[m
[32m+[m[32m            amountAMin: 0,[m
[32m+[m[32m            amountBMin: 0,[m
[32m+[m[32m            to: address(this),[m
[32m+[m[32m            deadline: block.timestamp[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function testBurnSlpWbtcEth() public {[m
[32m+[m[32m        uint256 amount = 300_000 * BTC;[m
[32m+[m[32m        getSlpWbtcEth(amount);[m
[32m+[m[32m        assertGe(slpWbtcEth.balanceOf(address(this)), amount);[m
[32m+[m[32m        assertLt(wbtc.balanceOf(address(this)), 1 * BTC);[m
[32m+[m[32m        assertEq(weth.balanceOf(address(this)), 0);[m
[32m+[m[32m        slpWbtcEth.approve(sushiAddr, amount);[m
[32m+[m[32m        burnSlpWbtcEth(amount);[m
[32m+[m[32m        assertLt(slpWbtcEth.balanceOf(address(this)), amount / 10);[m
[32m+[m[32m        assertGt(wbtc.balanceOf(address(this)), 1 * BTC);[m
[32m+[m[32m        assertGt(weth.balanceOf(address(this)), 1 * WAD);[m
[32m+[m[32m    }[m
[32m+[m
     function getLink(uint256 amountLink) private {[m
         uint256 linkPrice = getLinkPrice();[m
         uint256 ethPrice = getEthPrice();[m
